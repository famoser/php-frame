<?php
/**
 * Created by PhpStorm.
 * User: Florian Moser
 * Date: 09.12.2015
 * Time: 18:25
 */

namespace famoser\phpFrame\Helpers;
class PasswordHelper extends HelperBase
{
    const FAILURE_PASSWORD_TOO_LONG = 10;
    const FAILURE_PASSWORD_TOO_SHORT = 11;
    const FAILURE_PASSWORD_NO_NUMBERS = 12;
    const FAILURE_PASSWORD_NO_CHARACTERS = 13;

    /**
     * @param $passwd
     * @return bool
     */
    public function checkPassword($passwd)
    {
        if (strlen($passwd) > 40) {
            return PasswordHelper::FAILURE_PASSWORD_TOO_LONG;
        }

        if (strlen($passwd) < 8) {
            return PasswordHelper::FAILURE_PASSWORD_TOO_SHORT;
        }

        if (!preg_match("#[0-9]+#", $passwd)) {
            return PasswordHelper::FAILURE_PASSWORD_NO_NUMBERS;
        }

        if (!preg_match("#[a-z]+#", $passwd)) {
            return PasswordHelper::FAILURE_PASSWORD_NO_CHARACTERS;
        }

        return true;
    }

    public function evaluateFailure($const)
    {
        return parent::evaluateFailure($const); // TODO: Change the autogenerated stub
    }

    /**
     * @param $password
     * @return string
     */
    public function convertToPasswordHash($password)
    {
        $options = [
            'cost' => 12,
        ];
        $hash = password_hash($password, PASSWORD_BCRYPT, $options);
        return $hash;
    }

    /**
     * @param $input
     * @param $hash
     * @return bool
     */
    public function validatePasswort($input, $hash)
    {
        return password_verify($input, $hash);
    }

    /**
     * @return string
     */
    public function createUniqueHash()
    {
        return bin2hex(mcrypt_create_iv(22, MCRYPT_DEV_URANDOM));
    }

    public function checkIfHashIsValid($hash)
    {
        return strlen($hash) == 44;
    }
}